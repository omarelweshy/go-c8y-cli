# yaml-language-server: $schema=../schema.json
---

group:
  name: ui/extensions
  description: Cumulocity IoT UI Extensions
  descriptionLong: 'Managed UI extensions'
  link: https://cumulocity.com/api/core/

commands:
  - name: getUIExtensions
    description: Get UI extensions collection
    descriptionLong: Get a collection of UI extensions by a given filter
    method: GET
    path: /application/applications
    accept: application/vnd.com.nsn.cumulocity.applicationCollection+json
    collectionType: application/vnd.com.nsn.cumulocity.application+json
    collectionProperty: applications
    alias:
        go: list
        powershell: Get-UIExtensionCollection
    examples:
      powershell:
        - description: Get ui extensions
          command: Get-UIExtensionCollection -PageSize 100

      go:
        - description: Get ui extensions
          command: c8y ui extensions list --pageSize 100

        - description: Get shared ui extensions
          command: c8y ui extensions list --availability SHARED
        
        - description: Get private ui extensions
          command: c8y ui extensions list --availability PRIVATE

    queryParameters:
      - name: type
        type: stringStatic
        value: HOSTED
        hidden: true
        description: Application type

      - name: name
        type: applicationname
        description: The name of the application.
        pipeline: true
      
      - name: owner
        type: tenantname
        description: The ID of the tenant that owns the applications.
      
      - name: providedFor
        type: tenantname
        description: The ID of a tenant that is subscribed to the applications but doesn't own them.
      
      - name: subscriber
        type: tenantname
        description: The ID of a tenant that is subscribed to the applications.

      - name: user
        type: user[]
        description: The ID of a user that has access to the applications.

      - name: tenant
        type: tenantname
        description: The ID of a tenant that either owns the application or is subscribed to the applications.

      - name: hasVersions
        type: booleanDefault
        default: "true"
        hidden: true
        description: When set to true, the returned result contains applications with an applicationVersions field that is not empty. When set to false, the result will contain applications with an empty applicationVersions field.

      - name: availability
        type: string
        description: Application access level for other tenants.
        validationSet:
          - SHARED
          - PRIVATE
          - MARKET

  - name: getUIExtension
    description: Get UI extension
    descriptionLong: Get a UI Extension
    method: GET
    path: /application/applications/{id}
    accept: application/vnd.com.nsn.cumulocity.application+json
    alias:
        go: get
        powershell: Get-UIExtension
    examples:
      powershell:
        - description: Get ui extension
          command: Get-UIExtension -Id 1234

      go:
        - description: Get ui extension by id
          command: c8y ui extensions get --id 1234

        - description: Get ui extension by name
          command: c8y ui extensions get --id myextension
          skipTest: true

    pathParameters:
      - name: id
        type: uiextension
        description: Extension

  - name: update
    description: 'Update UI extension details'
    descriptionLong: Update details of an existing UI extension
    method: PUT
    path: /application/applications/{id}
    accept: application/vnd.com.nsn.cumulocity.application+json
    alias:
        go: update
        powershell: Update-UIExtension
    examples:
      powershell:
        - description: Update application availability to MARKET
          command: Update-UIExtension -Id $App.name -Availability "MARKET"
          skipTest: true
      go:
        - description: Update an extension's availability to SHARED
          command: c8y ui extensions update --id "my-example-app" --availability SHARED
          skipTest: true
          assertStdOut:
            json:
              path: r//application/applications/\d+$
    pathParameters:
      - name: id
        type: uiextension
        pipeline: true
        required: true
        description: Extension id

    body:
      - name: data
        type: json
        description: data

      - name: name
        type: string
        required: false
        description: Name of the extension

      - name: key
        type: string
        required: false
        description: Shared secret of the extension

      - name: availability
        type: string
        validationSet: [MARKET, PRIVATE]
        required: false
        description: 'Access level for other tenants. Possible values are : MARKET, PRIVATE (default)'

      - name: contextPath
        type: string
        required: false
        description: contextPath of the extension

  - name: delete
    description: Delete UI extension
    descriptionLong: Delete an existing UI extension from the tenant
    method: DELETE
    path: /application/applications/{id}
    alias:
        go: delete
        powershell: Remove-UIExtension
    examples:
      powershell:
        - description: Remove UI extension
          command: Remove-UIExtension -Id $App.name
          skipTest: true
      go:
        - description: Update an extension's availability to SHARED
          command: c8y ui extensions delete --id "my-example-app"
          skipTest: true
          assertStdOut:
            json:
              path: r//application/applications/\d+$
    pathParameters:
      - name: id
        type: uiextension
        pipeline: true
        required: true
        description: Extension id
